allprojects {
    defaultTasks 'clean', 'build'

    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'idea'

    buildDir = 'target'
    version = '1.0-SNAPSHOT'
    group = 'org.suggs.test'

    repositories {
        mavenLocal()
        mavenCentral()
    }

}

subprojects { subprojects ->

    dependencies {
        compile "org.slf4j:slf4j-api:$slf4jVersion"

        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
        runtime "log4j:log4j:$log4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:1.9.5"
    }

}

project("apps-under-test:spring-state-machine") {
    dependencies {
        testCompile "javax.inject:javax.inject:$injectVersion"
        testCompile "org.springframework:spring-test:$springVersion"
        testCompile("org.springframework:spring-context:$springVersion")
    }

}


project("sandbox") {
    subprojects {
        dependencies {
            testCompile project(':apps-under-test:trader')
            testCompile project(':apps-under-test:gameoflife')
            testCompile project(':apps-under-test:spring-state-machine')
        }
    }
}

project("sandbox:cucumber") {
    dependencies {
        testCompile "info.cukes:cucumber-junit:$cucumberVersion"
        testCompile "info.cukes:cucumber-java:$cucumberVersion"
        testCompile "info.cukes:cucumber-spring:$cucumberVersion"
        testCompile "javax.inject:javax.inject:$injectVersion"
    }
}

project("sandbox:jbehave") {
    dependencies {
        testCompile "org.jbehave:jbehave-core:$jbehaveVersion"
        testCompile "org.jbehave:jbehave-spring:$jbehaveVersion"
    }

    //sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir
}

project("sandbox:concordion") {
    dependencies {
        testCompile "javax.inject:javax.inject:$injectVersion"
        testCompile "org.springframework:spring-context:$springVersion"
        testCompile "org.concordion:concordion:$concordionVersion"
        testCompile "org.concordion:concordion-extensions:$concordionExtensionsVersion"
        testCompile "org.agileinsider:concordion-plus:$concordionPlusVersion"
    }

    test {
        systemProperties 'concordion.output.dir': file("${buildDir}/concordion-results")
    }
}
