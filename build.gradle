allprojects {
    defaultTasks 'clean', 'build'
}

task wrapper(type: Wrapper) {
    description = "Generates gradlew scripts for NIX and win envs"
    gradleVersion = '1.9'
}

subprojects { subprojects ->

    apply plugin: 'java'
    apply from: "${rootDir}/gradle/version.gradle"
    apply from: "${rootDir}/gradle/ide.gradle"
    apply from: "${rootDir}/gradle/libraries.gradle"
    apply from: "${rootDir}/gradle/packaging.gradle"

    buildDir = 'target'
    group = 'org.suggs.test'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile libs.slf4jApi

        runtime libs.slf4jLog4j,
                libs.log4j

        testCompile libs.test.junit,
                libs.test.mockito,
                libs.hamcrest_all
    }
}

project("apps-under-test:spring-state-machine") {
    dependencies {
        testCompile libs.javax.inject,
                libs.spring.test,
                libs.spring.context
    }
}

project("sandbox") {
    subprojects {
        dependencies {
            testCompile project(':apps-under-test:trader'),
                    project(':apps-under-test:gameoflife'),
                    project(':apps-under-test:spring-state-machine'),
                    libs.javax.inject
        }
    }
}

project("sandbox:cucumber") {
    dependencies {
        testCompile libs.cucumber.junit,
                libs.cucumber.java,
                libs.cucumber.spring

        testRuntime libs.spring.context
    }
}

project("sandbox:jbehave") {
    dependencies {
        compile libs.jbehave_spring,
                libs.spring.context,
                libs.test.junit

        testCompile project(path: ':apps-under-test:spring-state-machine', configuration: 'testJarCfg')
    }
}

project("sandbox:concordion") {
    dependencies {
        testCompile libs.spring.context,
                libs.concordion.concordion,
                libs.concordion.extensions,
                libs.concordion.plus
    }

    test {
        systemProperties 'concordion.output.dir': file("${buildDir}/concordion-results")
    }
}
